#!/usr/bin/env node

const fs = require("fs");
const path = require("path");

// check if src/data/map-groups.json exists
const file = path.resolve("src/data/map-groups.json");
if (!fs.existsSync(file)) {
  console.log("src/data/map-groups.json does not exist");
  process.exit(1);
}

const replacementsFile = path.resolve("src/data/mice.json");
if (!fs.existsSync(replacementsFile)) {
  console.log("src/data/mice.json does not exist");
  process.exit(1);
}

let json = require(path.resolve(file));
const replacements = require(path.resolve(replacementsFile));

if (! json || ! replacements) {
  console.log("Failed to load data");
  process.exit(1);
}


const lookup = (name) => {
  let replacement = replacements.find((r) => {
    return r.name === name || r.name === `${name} Mouse`
  });

  if (replacement) {
    return replacement.type;
  } else {
    return name;
  }
}

// For each of the keys in the json, loop through the categories property and each of the mice in the category. if there's a replacement for it, replace it in the json.
const groups = Object.keys(json);

console.log(`Checking ${groups.length} maps...`);

groups.forEach((key) => {
  const categories = json[key].categories;
  let replacementsMade = 0;
  categories.forEach((category) => {
    category.mice.forEach((mouse) => {
      let replaced = false;
      let replacedName = '';
      let originalName = '';

      if (typeof mouse === 'object') {
        const name = mouse.mouse;
        replacedName = lookup(name);
        if (name !== replacedName) {
          originalName = mouse.mouse;
          mouse.mouse = replacedName;
          replaced = true;
        }
      } else {
        replacedName = lookup(mouse);
        if (mouse !== replacedName) {
          originalName = mouse;
          category.mice[category.mice.indexOf(mouse)] = replacedName;
          replaced = true;
        }
      }

      if (replaced) {
        replacementsMade++;
        console.log(`üê≠ Replaced ${originalName} with ${replacedName} in ${category.name} in ${key}`);
      }
    });
  });

  if (replacementsMade > 0) {
    console.log('');
  }

  console.log(`‚úÖÔ∏è Replaced ${replacementsMade} mice in ${categories.length} categories in ${key}`);
});


// write the json back to the src/data/map-groups.json file
fs.writeFileSync('./src/data/map-groups.json', JSON.stringify(json, null, 2));
console.log('Done!');
