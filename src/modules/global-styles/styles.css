/* Utility */
.transparent-text {
  color: transparent;
}

.text-black {
  color: #000;
}

.hidden {
  display: none;
}

.visible {
  display: block;
}

.full-opacity {
  opacity: 1;
}

.screen-reader-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.outline {
  outline: 1px solid #f00;
}

.sort-button {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 1px;
  cursor: pointer;
  content: "";
  border-top: 9px solid #777;
  border-right: 6px solid transparent;
  border-left: 6px solid transparent;
}

.sort-button.reverse {
  border-top: 0;
  border-right: 6px solid transparent;
  border-bottom: 9px solid #777;
  border-left: 6px solid transparent;
}

.sort-button.unsorted {
  opacity: 0.5;
}

.no-click {
  pointer-events: none;
}

.mh-ui-fade {
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.mh-ui-fade-in {
  opacity: 1;
}

.mh-ui-fade-out {
  opacity: 0;
}

.mh-ui-error-message,
.mh-ui-success-message {
  z-index: 21;
  padding: 10px;
  font-size: 10px;
  color: #160404;
  background-color: #f5b9b9;
  border: 1px solid #803e3e;
  border-radius: 5px;
  box-shadow: 0 1px 3px 0 #5e5e5e;
}

.mh-ui-success-message {
  background-color: #a3ea85;
  border: 1px solid #3e803e;
}

.mousehunt-improved-error {
  position: fixed;
  right: 25%;
  bottom: 50px;
  left: 25%;
  z-index: 20;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding: 10px 20px;
  background-color: #febebe;
  border: 1px solid #4e2727;
  border-radius: 6px;
  box-shadow: 0 0 10px 1px #bc7b7b;
}

.mousehunt-improved-error h1 {
  margin: 0 0 0.75em;
  font-size: 1.3em;
  font-weight: 900;
  color: #9f2323;
}

.mousehunt-improved-error p {
  margin: 0.5em 0;
  font-size: 1em;
  line-height: 1.5;
}

.mousehunt-improved-error pre {
  margin: 0 0.5em;
  color: #8b0101;
}

.mousehunt-improved-error pre::before {
  content: "> ";
}

@keyframes mh-improved-sway-side-to-side {
  0% {
    transform: rotate(0deg);
  }

  25% {
    transform: rotate(-10deg);
  }

  75% {
    transform: rotate(15deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

@keyframes mh-improved-slight-fade {
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.75;
  }

  100% {
    opacity: 1;
  }
}

/* always want to apply this, as it also applies to the error page */
.pageFrameView-column {
  min-height: 100vh;
}

/* Error page */
.PageLockError .pageFrameView-content {
  min-height: calc(100vh - 130px);
}

.PageLockError .pageFrameView-column {
  min-height: 100vh;
}

.PageLockError .pageFrameView-footer {
  display: flex;
  flex-flow: row wrap;
  row-gap: 20px;
  align-items: center;
  justify-content: center;
}

.PageLockError .pageFrameView-footer-linksContainer {
  flex: 0 0 100%;
}

.PageLockError .pageFrameView-footer a img {
  opacity: 0.4;
  transition: 0.3s;
  transform: scale(0.8);
}

.PageLockError .pageFrameView-footer-links.terms {
  text-align: center;
}

.PageLockError .pageFrameView-content > div:first-of-type {
  border: none !important;
}

.PageLockError .pageFrameView-content > div:first-of-type > div:nth-of-type(2) {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  min-height: 200px;
  padding: 0 10px;
}

.PageLockError .pageFrameView-footer a:hover img {
  opacity: 1;
  transform: scale(1);
}

/* 404 page because why not? and it'll be a nice surprise for anyone who sees it.
and yes, this super weird selector is necessary because nothing has classes. */
div[style="margin: 0 auto; text-align: center; width: 100%; font-size: 20px;"] img {
  transform-origin: bottom;
  animation-name: mh-improved-sway-side-to-side;
  animation-duration: 7s;
  animation-iteration-count: infinite;
}

div[style="margin: 0 auto; text-align: center; width: 100%; font-size: 20px;"] a:hover {
  text-decoration: underline;
}

div[style="margin: 0 auto; text-align: center; width: 100%; font-size: 20px;"] a {
  color: #00901c;
  text-decoration: none;
}

a.mousehuntActionButton.success::before {
  background-color: #00ff59;
  box-shadow: 0 0 10px #beff99 inset;
}

a.mousehuntActionButton.success {
  background-color: #97f990;
}

a.mousehuntActionButton.success:hover::before,
a.mousehuntActionButton.success:focus::before {
  background-color: #00ff59;
}

a.mousehuntActionButton.danger::before {
  background-color: #f27b6a;
  box-shadow: 0 0 10px #ffa5a5 inset;
}

a.mousehuntActionButton.danger {
  background-color: #ffa5a5;
}

a.mousehuntActionButton.danger:hover::before,
a.mousehuntActionButton.danger:focus::before {
  background-color: #ffa5a5;
}
